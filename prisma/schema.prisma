generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Core User Profile
// Updated schema.prisma
model User {
  id      String  @id @default(uuid())
  clerkId String  @unique
  email   String  @unique
  name    String?

  streams        Stream[]
  constellations Constellation[]
  driveItems     DriveItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stream {
  id   String     @id @default(uuid())
  name String
  type StreamType

  flows Flow[]

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum StreamType {
  SYSTEM // For core OS flows
  APPLICATION // For app-specific flows
  USER // For user-created flows
}

model Flow {
  id      String   @id @default(uuid())
  name    String
  type    FlowType
  content Json

  streamId String
  stream   Stream @relation(fields: [streamId], references: [id])

  // For referencing other flows
  useFlowId String?
  useFlow   Flow?   @relation("FlowReference", fields: [useFlowId], references: [id])
  usedBy    Flow[]  @relation("FlowReference")

  // Which constellation configurations use this flow
  activeIn ConstellationConfig[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FlowType {
  CORE // Base design system
  APP // App-specific configuration
  CUSTOM // User-created variation
}

model Constellation {
  id       String  @id @default(uuid())
  name     String
  isActive Boolean @default(false)

  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Configuration for each app in this environment
  configs ConstellationConfig[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConstellationConfig {
  id    String @id @default(uuid())
  appId String // e.g. "orion", "stellar", "flow"

  constellationId String
  constellation   Constellation @relation(fields: [constellationId], references: [id])

  flowId String
  flow   Flow   @relation(fields: [flowId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DriveItem {
  id       String  @id @default(uuid())
  name     String
  type     String // "FOLDER" or "FILE"
  path     String
  mimeType String?

  parentId String?
  parent   DriveItem?  @relation("DriveHierarchy", fields: [parentId], references: [id])
  children DriveItem[] @relation("DriveHierarchy")

  userId String
  user   User   @relation(fields: [userId], references: [id])

  // For tracking which flows reference this media
  usedInFlows String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
